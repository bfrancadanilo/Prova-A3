import java.util.ArrayList;
import java.util.List;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;

enum Perfil {
    ADMINISTRADOR, GERENTE, COLABORADOR
}

class Usuario {
    private String nome, cpf, email;
    private Perfil perfil;

    public Usuario(String nome, String cpf, String email, Perfil perfil) {
        this.nome = nome; this.cpf = cpf; this.email = email; this.perfil = perfil;
    }

    public String getNome() { return nome; }
    public Perfil getPerfil() { return perfil; }
}

class Equipe {
    private String nome;
    private List<Usuario> membros = new ArrayList<>();

    public Equipe(String nome) { this.nome = nome; }
    public void adicionarMembro(Usuario u) { if(!membros.contains(u)) membros.add(u); }
    public String getNome() { return nome; }
    public List<Usuario> getMembros() { return membros; }
}

class Projeto {
    private String nome;
    private List<Equipe> equipes = new ArrayList<>();

    public Projeto(String nome) { this.nome = nome; }
    public void adicionarEquipe(Equipe e) { if(!equipes.contains(e)) equipes.add(e); }
    public String getNome() { return nome; }
    public List<Equipe> getEquipes() { return equipes; }
}

class SistemaService {
    List<Usuario> usuarios = new ArrayList<>();
    List<Equipe> equipes = new ArrayList<>();
    List<Projeto> projetos = new ArrayList<>();

    public void cadastrarUsuario(Usuario u) { usuarios.add(u); }
    public void cadastrarEquipe(Equipe e) { equipes.add(e); }
    public void cadastrarProjeto(Projeto p) { projetos.add(p); }
}

public class Main extends Application {
    SistemaService service = new SistemaService();

    @Override
    public void start(Stage primaryStage) {
        TabPane tabPane = new TabPane();

        // Tab Usuários
        VBox userBox = new VBox(5);
        TextField nomeUser = new TextField();
        Button addUser = new Button("Adicionar Usuário");
        ListView<String> listaUsuarios = new ListView<>();
        addUser.setOnAction(e -> {
            Usuario u = new Usuario(nomeUser.getText(), "", "", Perfil.COLABORADOR);
            service.cadastrarUsuario(u);
            listaUsuarios.getItems().add(u.getNome());
            nomeUser.clear();
        });
        userBox.getChildren().addAll(new Label("Nome do Usuário:"), nomeUser, addUser, listaUsuarios);
        tabPane.getTabs().add(new Tab("Usuários", userBox));

        // Tab Equipes
        VBox equipeBox = new VBox(5);
        TextField nomeEquipe = new TextField();
        Button addEquipe = new Button("Adicionar Equipe");
        ListView<String> listaEquipes = new ListView<>();
        addEquipe.setOnAction(e -> {
            Equipe eq = new Equipe(nomeEquipe.getText());
            service.cadastrarEquipe(eq);
            listaEquipes.getItems().add(eq.getNome());
            nomeEquipe.clear();
        });
        equipeBox.getChildren().addAll(new Label("Nome da Equipe:"), nomeEquipe, addEquipe, listaEquipes);
        tabPane.getTabs().add(new Tab("Equipes", equipeBox));

        // Tab Projetos
        VBox projBox = new VBox(5);
        TextField nomeProj = new TextField();
        Button addProj = new Button("Adicionar Projeto");
        ListView<String> listaProjetos = new ListView<>();
        addProj.setOnAction(e -> {
            Projeto p = new Projeto(nomeProj.getText());
            service.cadastrarProjeto(p);
            listaProjetos.getItems().add(p.getNome());
            nomeProj.clear();
        });
        projBox.getChildren().addAll(new Label("Nome do Projeto:"), nomeProj, addProj, listaProjetos);
        tabPane.getTabs().add(new Tab("Projetos", projBox));

        primaryStage.setScene(new Scene(tabPane, 400, 300));
        primaryStage.setTitle("Sistema de Gestão de Projetos");
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
